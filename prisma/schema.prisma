// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String   @id @default(uuid())
  email        String   @unique
  first_name   String
  last_name    String
  password     String
  phone_number String?
  created_at   DateTime @default(now())
  updated_at   DateTime @updatedAt

  UserRole    UserRole[]
  Price       Price[]
  UserMarket  UserMarket[]
  UserSession UserSession[]
}

model Role {
  id       String     @id @default(uuid())
  name     String     @unique
  UserRole UserRole[]
}

model UserRole {
  role_id     String
  user_id     String
  is_approved Boolean @default(false)

  user User @relation(fields: [user_id], references: [id], onDelete: Cascade)
  role Role @relation(fields: [role_id], references: [id], onDelete: Cascade)

  @@id([role_id, user_id])
  @@unique([role_id, user_id])
}

model UserSession {
  id            String   @id @default(uuid())
  user_id       String
  refresh_token String   @unique
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  user User @relation(fields: [user_id], references: [id], onDelete: Cascade)
}

model Market {
  id         String   @id @default(uuid())
  name       String
  location   String?
  image_url  String
  is_open    Boolean  @default(true)
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  prices     Price[]
  UserMarket UserMarket[]
}

model UserMarket {
  user_id   String
  market_id String

  user   User   @relation(fields: [user_id], references: [id], onDelete: Cascade)
  market Market @relation(fields: [market_id], references: [id], onDelete: Cascade)

  @@id([user_id, market_id])
  @@unique([user_id, market_id])
}

model Product {
  id          String   @id @default(uuid())
  name        String   @unique
  description String?
  created_at  DateTime @default(now())
  updated_at  DateTime @updatedAt

  prices Price[]
}

model Price {
  id          String   @id @default(uuid())
  market_id   String
  product_id  String
  price_date  DateTime @db.Date
  price_value Float
  user_id     String

  market  Market  @relation(fields: [market_id], references: [id], onDelete: Cascade)
  product Product @relation(fields: [product_id], references: [id], onDelete: Cascade)
  user    User    @relation(fields: [user_id], references: [id], onDelete: Cascade)

  @@index([market_id, product_id, price_date])
}
